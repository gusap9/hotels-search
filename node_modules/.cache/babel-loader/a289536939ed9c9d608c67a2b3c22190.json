{"ast":null,"code":"var _jsxFileName = \"/Users/nikitaasauleak/Desktop/search/src/components/UnfavouriteHotelsList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Unfavourite_item from \"./Unfavourite_item\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UnfavouriteHotelsList = _ref => {\n  _s();\n\n  let {\n    choosedLocation,\n    choosedDate,\n    countOfDays,\n    favHotels,\n    setFavHotels\n  } = _ref;\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [hotels, setHotels] = useState([]);\n  useEffect(() => {\n    fetch(`https://engine.hotellook.com/api/v2/lookup.json?query=${choosedLocation}&lang=ru&lookFor=hotel&limit=10`).then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setHotels(result.results.hotels);\n    }, error => {\n      setIsLoaded(true);\n      setHotels(error);\n      console.log(error);\n    });\n  }, [choosedLocation]);\n\n  const unfavToFav = id => {\n    for (let i = 0; i < hotels.length; i++) {\n      if (hotels[i].id === id) {\n        if (favHotels.includes(hotels[i]) === true) {\n          break;\n        } else {\n          setFavHotels([hotels[id], ...favHotels]);\n        }\n      }\n    }\n  };\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"second-column__hotels-list\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"second-column__hotels-list\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  } else if (choosedLocation) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"second-column__hotels-list\",\n      children: hotels.map(hotel => /*#__PURE__*/_jsxDEV(Unfavourite_item, {\n        unfavToFav: unfavToFav,\n        hotel: hotel,\n        name: hotel.label,\n        choosedDate: choosedDate,\n        countOfDays: countOfDays\n      }, hotel.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(UnfavouriteHotelsList, \"VJ8JGvRPFFjXaUXvcOh3klKkPk8=\");\n\n_c = UnfavouriteHotelsList;\nexport default UnfavouriteHotelsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UnfavouriteHotelsList\");","map":{"version":3,"sources":["/Users/nikitaasauleak/Desktop/search/src/components/UnfavouriteHotelsList.jsx"],"names":["React","useState","useEffect","Unfavourite_item","UnfavouriteHotelsList","choosedLocation","choosedDate","countOfDays","favHotels","setFavHotels","error","setError","isLoaded","setIsLoaded","hotels","setHotels","fetch","then","res","json","result","results","console","log","unfavToFav","id","i","length","includes","message","map","hotel","label"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAEA,MAAMC,qBAAqB,GAAG,QAA4E;AAAA;;AAAA,MAA3E;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA,WAAnB;AAAgCC,IAAAA,WAAhC;AAA6CC,IAAAA,SAA7C;AAAwDC,IAAAA;AAAxD,GAA2E;AACtG,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,KAAK,CAAE,yDAAwDX,eAAgB,iCAA1E,CAAL,CACKY,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGSG,MAAD,IAAY;AACRP,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,SAAS,CAACK,MAAM,CAACC,OAAP,CAAeP,MAAhB,CAAT;AACH,KANT,EAOSJ,KAAD,IAAW;AACPG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,SAAS,CAACL,KAAD,CAAT;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACH,KAXT;AAaH,GAdQ,EAcN,CAACL,eAAD,CAdM,CAAT;;AAgBA,QAAMmB,UAAU,GAAIC,EAAD,IAAQ;AACvB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,MAAM,CAACa,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACpC,UAAIZ,MAAM,CAACY,CAAD,CAAN,CAAUD,EAAV,KAAiBA,EAArB,EAAyB;AACrB,YAAIjB,SAAS,CAACoB,QAAV,CAAmBd,MAAM,CAACY,CAAD,CAAzB,MAAkC,IAAtC,EAA4C;AACxC;AACH,SAFD,MAEO;AACHjB,UAAAA,YAAY,CAAC,CAACK,MAAM,CAACW,EAAD,CAAP,EAAa,GAAGjB,SAAhB,CAAD,CAAZ;AACH;AACJ;AACJ;AACJ,GAVD;;AAWA,MAAIE,KAAJ,EAAW;AACP,wBACI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,6BACI;AAAA,6DACaA,KAAK,CAACmB,OADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH,GARD,MAQO,IAAI,CAACjB,QAAL,EAAe;AAClB,wBACI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GANM,MAMA,IAAIP,eAAJ,EAAqB;AACxB,wBACI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,gBACKS,MAAM,CAACgB,GAAP,CAAWC,KAAK,iBACb,QAAC,gBAAD;AAAkB,QAAA,UAAU,EAAEP,UAA9B;AAA0C,QAAA,KAAK,EAAEO,KAAjD;AAAwD,QAAA,IAAI,EAAEA,KAAK,CAACC,KAApE;AAA0F,QAAA,WAAW,EAAE1B,WAAvG;AAAoH,QAAA,WAAW,EAAEC;AAAjI,SAAgFwB,KAAK,CAACN,EAAtF;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;AACJ,CAvDD;;GAAMrB,qB;;KAAAA,qB;AAyDN,eAAeA,qBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Unfavourite_item from \"./Unfavourite_item\";\n\nconst UnfavouriteHotelsList = ({ choosedLocation, choosedDate, countOfDays, favHotels, setFavHotels }) => {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [hotels, setHotels] = useState([]);\n    \n    useEffect(() => {\n        fetch(`https://engine.hotellook.com/api/v2/lookup.json?query=${choosedLocation}&lang=ru&lookFor=hotel&limit=10`)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setIsLoaded(true);\n                    setHotels(result.results.hotels);\n                },\n                (error) => {\n                    setIsLoaded(true);\n                    setHotels(error);\n                    console.log(error)\n                }\n            )\n    }, [choosedLocation])\n\n    const unfavToFav = (id) => {\n        for (let i = 0; i < hotels.length; i++) {\n            if (hotels[i].id === id) {\n                if (favHotels.includes(hotels[i]) === true) {\n                    break\n                } else {\n                    setFavHotels([hotels[id], ...favHotels])\n                }\n            }\n        }\n    }\n    if (error) {\n        return (\n            <div className=\"second-column__hotels-list\">\n                <div>\n                    Ошибка: {error.message}\n                </div>\n            </div>\n        )\n    } else if (!isLoaded) {\n        return (\n            <div className=\"second-column__hotels-list\">\n                <div>Загрузка...</div>\n            </div>\n        )\n    } else if (choosedLocation) {\n        return (\n            <div className=\"second-column__hotels-list\">\n                {hotels.map(hotel => (\n                    <Unfavourite_item unfavToFav={unfavToFav} hotel={hotel} name={hotel.label} key={hotel.id} choosedDate={choosedDate} countOfDays={countOfDays} />\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default UnfavouriteHotelsList;\n"]},"metadata":{},"sourceType":"module"}