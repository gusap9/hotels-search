{"ast":null,"code":"var _jsxFileName = \"/Users/nikitaasauleak/Desktop/search/src/components/UnfavouriteHotelsList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Unfavourite_item from \"./Unfavourite_item\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UnfavouriteHotelsList = _ref => {\n  _s();\n\n  let {\n    choosedLocation,\n    choosedDate,\n    countOfDays\n  } = _ref;\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [hotels, setHotels] = useState([]);\n  useEffect(() => {\n    fetch(`https://engine.hotellook.com/api/v2/lookup.json?query=${choosedLocation}&lang=ru&lookFor=hotel&limit=10`).then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setHotels(result.results.hotels);\n    }, error => {\n      setIsLoaded(true);\n      setHotels(error);\n      console.log(error);\n    });\n  }, [choosedLocation]);\n\n  const unfavToFav = id => {\n    let props = {\n      favourite: false\n    };\n    let propss = {\n      favourite: false\n    };\n    setHotels([...hotels.map(hotel => 1 === 1 ? { ...hotel,\n      ...props\n    } : { ...hotel,\n      ...props\n    })]);\n    let obj = { ...props,\n      ...propss\n    };\n    console.log();\n  };\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"second-column__hotels-list\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"second-column__hotels-list\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  } else if (choosedLocation) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"second-column__hotels-list\",\n      children: hotels.map(hotel => /*#__PURE__*/_jsxDEV(Unfavourite_item, {\n        unfavToFav: unfavToFav,\n        hotel: hotel,\n        name: hotel.label,\n        choosedDate: choosedDate,\n        countOfDays: countOfDays\n      }, hotel.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(UnfavouriteHotelsList, \"VJ8JGvRPFFjXaUXvcOh3klKkPk8=\");\n\n_c = UnfavouriteHotelsList;\nexport default UnfavouriteHotelsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UnfavouriteHotelsList\");","map":{"version":3,"sources":["/Users/nikitaasauleak/Desktop/search/src/components/UnfavouriteHotelsList.jsx"],"names":["React","useState","useEffect","Unfavourite_item","UnfavouriteHotelsList","choosedLocation","choosedDate","countOfDays","error","setError","isLoaded","setIsLoaded","hotels","setHotels","fetch","then","res","json","result","results","console","log","unfavToFav","id","props","favourite","propss","map","hotel","obj","message","label"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAEA,MAAMC,qBAAqB,GAAG,QAAmD;AAAA;;AAAA,MAAlD;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA,WAAnB;AAAgCC,IAAAA;AAAhC,GAAkD;AAC7E,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,KAAK,CAAE,yDAAwDT,eAAgB,iCAA1E,CAAL,CACKU,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGSG,MAAD,IAAY;AACRP,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,SAAS,CAACK,MAAM,CAACC,OAAP,CAAeP,MAAhB,CAAT;AACH,KANT,EAOSJ,KAAD,IAAW;AACPG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,SAAS,CAACL,KAAD,CAAT;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACH,KAXT;AAaH,GAdQ,EAcN,CAACH,eAAD,CAdM,CAAT;;AAeA,QAAMiB,UAAU,GAAIC,EAAD,IAAQ;AACvB,QAAIC,KAAK,GAAG;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAZ;AACA,QAAIC,MAAM,GAAG;AAAED,MAAAA,SAAS,EAAE;AAAb,KAAb;AACAZ,IAAAA,SAAS,CAAC,CAAC,GAAGD,MAAM,CAACe,GAAP,CAAWC,KAAK,IAAI,MAAM,CAAN,GAAU,EAAE,GAAGA,KAAL;AAAY,SAAGJ;AAAf,KAAV,GAAmC,EAAE,GAAGI,KAAL;AAAY,SAAGJ;AAAf,KAAvD,CAAJ,CAAD,CAAT;AACA,QAAIK,GAAG,GAAG,EAAE,GAAGL,KAAL;AAAY,SAAGE;AAAf,KAAV;AACAN,IAAAA,OAAO,CAACC,GAAR;AACH,GAND;;AAOA,MAAIb,KAAJ,EAAW;AACP,wBACI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,6BACI;AAAA,6DACaA,KAAK,CAACsB,OADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH,GARD,MAQO,IAAI,CAACpB,QAAL,EAAe;AAClB,wBACI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GANM,MAMA,IAAIL,eAAJ,EAAqB;AACxB,wBACI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,gBACKO,MAAM,CAACe,GAAP,CAAWC,KAAK,iBACb,QAAC,gBAAD;AAAkB,QAAA,UAAU,EAAEN,UAA9B;AAA0C,QAAA,KAAK,EAAEM,KAAjD;AAAwD,QAAA,IAAI,EAAEA,KAAK,CAACG,KAApE;AAA0F,QAAA,WAAW,EAAEzB,WAAvG;AAAoH,QAAA,WAAW,EAAEC;AAAjI,SAAgFqB,KAAK,CAACL,EAAtF;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;AACJ,CAjDD;;GAAMnB,qB;;KAAAA,qB;AAmDN,eAAeA,qBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Unfavourite_item from \"./Unfavourite_item\";\n\nconst UnfavouriteHotelsList = ({ choosedLocation, choosedDate, countOfDays }) => {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [hotels, setHotels] = useState([]);\n    useEffect(() => {\n        fetch(`https://engine.hotellook.com/api/v2/lookup.json?query=${choosedLocation}&lang=ru&lookFor=hotel&limit=10`)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setIsLoaded(true);\n                    setHotels(result.results.hotels);\n                },\n                (error) => {\n                    setIsLoaded(true);\n                    setHotels(error);\n                    console.log(error)\n                }\n            )\n    }, [choosedLocation])\n    const unfavToFav = (id) => {\n        let props = { favourite: false }\n        let propss = { favourite: false }\n        setHotels([...hotels.map(hotel => 1 === 1 ? { ...hotel, ...props } : { ...hotel, ...props })])\n        let obj = { ...props, ...propss }\n        console.log()\n    }\n    if (error) {\n        return(\n            <div className=\"second-column__hotels-list\">\n                <div>\n                    Ошибка: {error.message}\n                </div>\n            </div>\n        )\n    } else if (!isLoaded) {\n        return (\n            <div className=\"second-column__hotels-list\">\n                <div>Загрузка...</div>\n            </div>\n        )\n    } else if (choosedLocation) {\n        return (\n            <div className=\"second-column__hotels-list\">\n                {hotels.map(hotel => (\n                    <Unfavourite_item unfavToFav={unfavToFav} hotel={hotel} name={hotel.label} key={hotel.id} choosedDate={choosedDate} countOfDays={countOfDays}  />\n                ))} \n            </div>\n        );\n    }\n}\n\nexport default UnfavouriteHotelsList;\n"]},"metadata":{},"sourceType":"module"}