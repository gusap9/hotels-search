{"ast":null,"code":"var _jsxFileName = \"/Users/nikitaasauleak/Desktop/search/src/components/UnfavouriteHotelsList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UnfavouriteHotelsList = _ref => {\n  _s();\n\n  let {\n    choosedLocation,\n    choosedDate,\n    countOfDays\n  } = _ref;\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [hotels, setHotels] = useState([]);\n  useEffect(() => {\n    fetch(`https://engine.hotellook.com/api/v2/lookup.json?query=${choosedLocation}&lang=en&lookFor=hotel&limit=${countOfDays}`).then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setHotels(result.results);\n    }, error => {\n      setIsLoaded(true);\n      setHotels(error);\n    });\n  }, []);\n  console.log(hotels);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"favoutite-hotels-list\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"favoutite-hotels-list\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  } else if (choosedLocation) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"favoutite-hotels-list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(UnfavouriteHotelsList, \"VJ8JGvRPFFjXaUXvcOh3klKkPk8=\");\n\n_c = UnfavouriteHotelsList;\nexport default UnfavouriteHotelsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UnfavouriteHotelsList\");","map":{"version":3,"sources":["/Users/nikitaasauleak/Desktop/search/src/components/UnfavouriteHotelsList.jsx"],"names":["React","useState","useEffect","UnfavouriteHotelsList","choosedLocation","choosedDate","countOfDays","error","setError","isLoaded","setIsLoaded","hotels","setHotels","fetch","then","res","json","result","results","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,qBAAqB,GAAG,QAAmD;AAAA;;AAAA,MAAlD;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA,WAAnB;AAAgCC,IAAAA;AAAhC,GAAkD;AAC7E,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,KAAK,CAAE,yDAAwDT,eAAgB,gCAA+BE,WAAY,EAArH,CAAL,CACKQ,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGSG,MAAD,IAAY;AACRP,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,SAAS,CAACK,MAAM,CAACC,OAAR,CAAT;AAEH,KAPT,EAQSX,KAAD,IAAW;AACPG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,SAAS,CAACL,KAAD,CAAT;AACH,KAXT;AAaH,GAdQ,EAcN,EAdM,CAAT;AAeAY,EAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;;AACA,MAAIJ,KAAJ,EAAW;AACP,wBACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH,GATD,MASO,IAAI,CAACE,QAAL,EAAe;AAClB,wBACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GANM,MAMA,IAAIL,eAAJ,EAAqB;AACxB,wBACI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;AACJ,CAjDD;;GAAMD,qB;;KAAAA,qB;AAmDN,eAAeA,qBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst UnfavouriteHotelsList = ({ choosedLocation, choosedDate, countOfDays }) => {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [hotels, setHotels] = useState([]);\n    useEffect(() => {\n        fetch(`https://engine.hotellook.com/api/v2/lookup.json?query=${choosedLocation}&lang=en&lookFor=hotel&limit=${countOfDays}`)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setIsLoaded(true);\n                    setHotels(result.results);\n                    \n                },\n                (error) => {\n                    setIsLoaded(true);\n                    setHotels(error);\n                }\n            )\n    }, [])\n    console.log(hotels)\n    if (error) {\n        return(\n            <div className=\"favoutite-hotels-list\">\n                <div>\n                    Ошибка:\n                    {/* {error.message} */}\n                </div>\n            </div>\n        )\n    } else if (!isLoaded) {\n        return (\n            <div className=\"favoutite-hotels-list\">\n                <div>Загрузка...</div>\n            </div>\n        )\n    } else if (choosedLocation) {\n        return (\n            <div className=\"favoutite-hotels-list\">\n                {/* {hotels.map(hotel => (\n                    <div key={hotel.id}>\n                        {hotel.label}\n                    </div>\n                ))} \n                for (i = 0, i )\n                \n                */}\n            </div>\n        );\n    }\n}\n\nexport default UnfavouriteHotelsList;\n"]},"metadata":{},"sourceType":"module"}