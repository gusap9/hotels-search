{"ast":null,"code":"import React, { useState, useEffect } from \"react\";\nimport Unfavourite_item from \"./Unfavourite_item\";\n\nconst FavouriteHotelsList = _ref => {// const [error, setError] = useState(null);\n  // const [isLoaded, setIsLoaded] = useState(false);\n  // const [hotels, setHotels] = useState([]);\n  // useEffect(() => {\n  //     fetch(`https://engine.hotellook.com/api/v2/lookup.json?query=${choosedLocation}&lang=en&lookFor=hotel&limit=${countOfDays}`)\n  //         .then(res => res.json())\n  //         .then(\n  //             (result) => {\n  //                 setIsLoaded(true);\n  //                 setHotels(result.results.hotels);\n  //             },\n  //             (error) => {\n  //                 setIsLoaded(true);\n  //                 setHotels(error);\n  //             }\n  //         )\n  // }, [])\n  // console.log(hotels)\n  // if (error) {\n  //     return(\n  //         <div className=\"favoutite-hotels-list\">\n  //             <div>\n  //                 Ошибка:\n  //                 {/* {error.message} */}\n  //             </div>\n  //         </div>\n  //     )\n  // } else if (!isLoaded) {\n  //     return (\n  //         <div className=\"favoutite-hotels-list\">\n  //             <div>Загрузка...</div>\n  //         </div>\n  //     )\n  // } else if (choosedLocation) {\n  //     return (\n  //         <div className=\"favoutite-hotels-list\">\n  //             {hotels.map(hotel => (\n  //                 <Unfavourite_item hotel={hotel} name={hotel.label} key={hotel.id} choosedDate={choosedDate} countOfDays={countOfDays} />\n  //             ))} \n  //         </div>\n  //     );\n  // }\n\n  let {\n    choosedLocation,\n    choosedDate,\n    countOfDays\n  } = _ref;\n};\n\n_c = FavouriteHotelsList;\nexport default FavouriteHotelsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FavouriteHotelsList\");","map":{"version":3,"sources":["/Users/nikitaasauleak/Desktop/search/src/components/FavouriteHotelsList.jsx"],"names":["React","useState","useEffect","Unfavourite_item","FavouriteHotelsList","choosedLocation","choosedDate","countOfDays"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,MAAMC,mBAAmB,GAAG,QAAmD,CAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA3C2E,MAAlD;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA,WAAnB;AAAgCC,IAAAA;AAAhC,GAAkD;AA4C9E,CA5CD;;KAAMH,mB;AA8CN,eAAeA,mBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Unfavourite_item from \"./Unfavourite_item\";\n\nconst FavouriteHotelsList = ({ choosedLocation, choosedDate, countOfDays }) => {\n    // const [error, setError] = useState(null);\n    // const [isLoaded, setIsLoaded] = useState(false);\n    // const [hotels, setHotels] = useState([]);\n    // useEffect(() => {\n    //     fetch(`https://engine.hotellook.com/api/v2/lookup.json?query=${choosedLocation}&lang=en&lookFor=hotel&limit=${countOfDays}`)\n    //         .then(res => res.json())\n    //         .then(\n    //             (result) => {\n    //                 setIsLoaded(true);\n    //                 setHotels(result.results.hotels);\n                    \n    //             },\n    //             (error) => {\n    //                 setIsLoaded(true);\n    //                 setHotels(error);\n    //             }\n    //         )\n    // }, [])\n    // console.log(hotels)\n    // if (error) {\n    //     return(\n    //         <div className=\"favoutite-hotels-list\">\n    //             <div>\n    //                 Ошибка:\n    //                 {/* {error.message} */}\n    //             </div>\n    //         </div>\n    //     )\n    // } else if (!isLoaded) {\n    //     return (\n    //         <div className=\"favoutite-hotels-list\">\n    //             <div>Загрузка...</div>\n    //         </div>\n    //     )\n    // } else if (choosedLocation) {\n    //     return (\n    //         <div className=\"favoutite-hotels-list\">\n    //             {hotels.map(hotel => (\n    //                 <Unfavourite_item hotel={hotel} name={hotel.label} key={hotel.id} choosedDate={choosedDate} countOfDays={countOfDays} />\n    //             ))} \n    //         </div>\n    //     );\n    // }\n}\n\nexport default FavouriteHotelsList;\n"]},"metadata":{},"sourceType":"module"}